INT_TYPE
IDENT(a)
ASSIGN
INT(5)
SEMICOLON
INT_TYPE
IDENT(b)
ASSIGN
INT(3)
SEMICOLON
PRINT
LPAREN
STRING(Integers a and b:)
RPAREN
SEMICOLON
PRINT_INT
LPAREN
IDENT(a)
RPAREN
SEMICOLON
PRINT_INT
LPAREN
IDENT(b)
RPAREN
SEMICOLON
INT_TYPE
IDENT(sum)
ASSIGN
IDENT(a)
PLUS
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a + b =)
RPAREN
SEMICOLON
PRINT_INT
LPAREN
IDENT(sum)
RPAREN
SEMICOLON
INT_TYPE
IDENT(diff)
ASSIGN
IDENT(a)
MINUS
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a - b =)
RPAREN
SEMICOLON
PRINT_INT
LPAREN
IDENT(diff)
RPAREN
SEMICOLON
INT_TYPE
IDENT(prod)
ASSIGN
IDENT(a)
TIMES
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a * b =)
RPAREN
SEMICOLON
PRINT_INT
LPAREN
IDENT(prod)
RPAREN
SEMICOLON
INT_TYPE
IDENT(quot)
ASSIGN
IDENT(a)
DIVIDE
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a / b =)
RPAREN
SEMICOLON
PRINT_INT
LPAREN
IDENT(quot)
RPAREN
SEMICOLON
INT_TYPE
IDENT(rem)
ASSIGN
IDENT(a)
REM
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a % b =)
RPAREN
SEMICOLON
PRINT_INT
LPAREN
IDENT(rem)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(x)
ASSIGN
FLOAT(5.500000)
SEMICOLON
FLOAT_TYPE
IDENT(y)
ASSIGN
FLOAT(2.500000)
SEMICOLON
PRINT
LPAREN
STRING(Floats x and y:)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(x)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(y)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(fsum)
ASSIGN
IDENT(x)
PLUS
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x + y =)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(fsum)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(fdiff)
ASSIGN
IDENT(x)
MINUS
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x - y =)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(fdiff)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(fprod)
ASSIGN
IDENT(x)
TIMES
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x * y =)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(fprod)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(fdiv)
ASSIGN
IDENT(x)
DIVIDE
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x / y =)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(fdiv)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(mixed1)
ASSIGN
IDENT(x)
PLUS
IDENT(a)
SEMICOLON
PRINT
LPAREN
STRING(float + int:)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(mixed1)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(mixed2)
ASSIGN
IDENT(b)
TIMES
IDENT(x)
SEMICOLON
PRINT
LPAREN
STRING(int * float:)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(mixed2)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(int_eq)
ASSIGN
IDENT(a)
EQ
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a == b:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(int_eq)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(int_neq)
ASSIGN
IDENT(a)
NEQ
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a != b:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(int_neq)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(int_lt)
ASSIGN
IDENT(a)
LT
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a < b:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(int_lt)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(int_gt)
ASSIGN
IDENT(a)
GT
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a > b:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(int_gt)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(int_le)
ASSIGN
IDENT(a)
LTE
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a <= b:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(int_le)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(int_ge)
ASSIGN
IDENT(a)
GTE
IDENT(b)
SEMICOLON
PRINT
LPAREN
STRING(a >= b:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(int_ge)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(float_eq)
ASSIGN
IDENT(x)
EQ
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x == y:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(float_eq)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(float_neq)
ASSIGN
IDENT(x)
NEQ
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x != y:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(float_neq)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(float_lt)
ASSIGN
IDENT(x)
LT
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x < y:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(float_lt)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(float_gt)
ASSIGN
IDENT(x)
GT
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x > y:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(float_gt)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(float_le)
ASSIGN
IDENT(x)
LTE
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x <= y:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(float_le)
RPAREN
SEMICOLON
BOOL_TYPE
IDENT(float_ge)
ASSIGN
IDENT(x)
GTE
IDENT(y)
SEMICOLON
PRINT
LPAREN
STRING(x >= y:)
RPAREN
SEMICOLON
PRINT
LPAREN
IDENT(float_ge)
RPAREN
SEMICOLON
EOF
Type checking successful!
Integers a and b:
5
3
a + b =
8
a - b =
2
a * b =
15
a / b =
1
a % b =
2
Floats x and y:
5.500000
2.500000
x + y =
8.000000
x - y =
3.000000
x * y =
13.750000
x / y =
2.200000
float + int:
10.500000
int * float:
16.500000
a == b:
false
a != b:
true
a < b:
false
a > b:
true
a <= b:
false
a >= b:
true
x == y:
false
x != y:
true
x < y:
false
x > y:
true
x <= y:
false
x >= y:
true
Program executed successfully
