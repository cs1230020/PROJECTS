MATRIX_TYPE
IDENT(A)
ASSIGN
INT(2)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(3.000000)
COMMA
FLOAT(4.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Matrix A:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(A)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(B)
ASSIGN
INT(2)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(5.000000)
COMMA
FLOAT(6.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(7.000000)
COMMA
FLOAT(8.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Matrix B:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(B)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(C)
ASSIGN
IDENT(A)
MATRIX_ADD
IDENT(B)
SEMICOLON
PRINT
LPAREN
STRING(A + B =)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(C)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(scalar)
ASSIGN
FLOAT(2.000000)
SEMICOLON
MATRIX_TYPE
IDENT(D)
ASSIGN
IDENT(A)
MATRIX_SCALAR_MULT
IDENT(scalar)
SEMICOLON
PRINT
LPAREN
STRING(2 * A =)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(D)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(E)
ASSIGN
IDENT(A)
MATRIX_MULT
IDENT(B)
SEMICOLON
PRINT
LPAREN
STRING(A * B =)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(E)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(F)
ASSIGN
TRANSPOSE
LPAREN
IDENT(A)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Transpose of A:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(F)
RPAREN
SEMICOLON
VECTOR_TYPE
IDENT(dims)
ASSIGN
DIM
LPAREN
IDENT(A)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Dimensions of A:)
RPAREN
SEMICOLON
PRINT_VECTOR
LPAREN
IDENT(dims)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(element)
ASSIGN
IDENT(A)
LBRACKET
INT(0)
RBRACKET
LBRACKET
INT(0)
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(A[0][0] =)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(element)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(M1)
ASSIGN
INT(3)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
COMMA
FLOAT(3.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(4.000000)
COMMA
FLOAT(5.000000)
COMMA
FLOAT(6.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(7.000000)
COMMA
FLOAT(8.000000)
COMMA
FLOAT(9.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(3x3 Matrix M1:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(M1)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(M2)
ASSIGN
INT(3)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(9.000000)
COMMA
FLOAT(8.000000)
COMMA
FLOAT(7.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(6.000000)
COMMA
FLOAT(5.000000)
COMMA
FLOAT(4.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(3.000000)
COMMA
FLOAT(2.000000)
COMMA
FLOAT(1.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(3x3 Matrix M2:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(M2)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(M3)
ASSIGN
IDENT(M1)
MATRIX_ADD
IDENT(M2)
SEMICOLON
PRINT
LPAREN
STRING(M1 + M2 =)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(M3)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(M4)
ASSIGN
IDENT(M1)
MATRIX_MULT
IDENT(M2)
SEMICOLON
PRINT
LPAREN
STRING(M1 * M2 =)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(M4)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(det_test)
ASSIGN
INT(2)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(4.000000)
COMMA
FLOAT(-2.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(-1.000000)
COMMA
FLOAT(3.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Matrix for determinant:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(det_test)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(det_val)
ASSIGN
DET
LPAREN
IDENT(det_test)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Determinant =)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(det_val)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(det_test3)
ASSIGN
INT(3)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
COMMA
FLOAT(3.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(0.000000)
COMMA
FLOAT(1.000000)
COMMA
FLOAT(4.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(5.000000)
COMMA
FLOAT(6.000000)
COMMA
FLOAT(0.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(3x3 Matrix for determinant:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(det_test3)
RPAREN
SEMICOLON
FLOAT_TYPE
IDENT(det_val3)
ASSIGN
DET
LPAREN
IDENT(det_test3)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Determinant =)
RPAREN
SEMICOLON
PRINT_FLOAT
LPAREN
IDENT(det_val3)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(inv_test)
ASSIGN
INT(2)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(4.000000)
COMMA
FLOAT(7.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(2.000000)
COMMA
FLOAT(6.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Matrix for inverse:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(inv_test)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(inverse)
ASSIGN
INVERSE
LPAREN
IDENT(inv_test)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Inverse =)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(inverse)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(identity)
ASSIGN
IDENT(inv_test)
MATRIX_MULT
IDENT(inverse)
SEMICOLON
PRINT
LPAREN
STRING(Original * Inverse (should be identity):)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(identity)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(M)
ASSIGN
INT(2)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(3.000000)
COMMA
FLOAT(4.000000)
RBRACKET
RBRACKET
SEMICOLON
VECTOR_TYPE
IDENT(v)
ASSIGN
INT(2)
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Matrix M:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(M)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Vector v:)
RPAREN
SEMICOLON
PRINT_VECTOR
LPAREN
IDENT(v)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(I)
ASSIGN
INT(3)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(0.000000)
COMMA
FLOAT(0.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(0.000000)
COMMA
FLOAT(1.000000)
COMMA
FLOAT(0.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(0.000000)
COMMA
FLOAT(0.000000)
COMMA
FLOAT(1.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(3x3 Identity matrix:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(I)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(U)
ASSIGN
INT(3)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
COMMA
FLOAT(3.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(0.000000)
COMMA
FLOAT(4.000000)
COMMA
FLOAT(5.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(0.000000)
COMMA
FLOAT(0.000000)
COMMA
FLOAT(6.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Upper triangular matrix:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(U)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(L)
ASSIGN
INT(3)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(0.000000)
COMMA
FLOAT(0.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(2.000000)
COMMA
FLOAT(3.000000)
COMMA
FLOAT(0.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(4.000000)
COMMA
FLOAT(5.000000)
COMMA
FLOAT(6.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Lower triangular matrix:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(L)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(D)
ASSIGN
INT(3)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(2.000000)
COMMA
FLOAT(0.000000)
COMMA
FLOAT(0.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(0.000000)
COMMA
FLOAT(3.000000)
COMMA
FLOAT(0.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(0.000000)
COMMA
FLOAT(0.000000)
COMMA
FLOAT(4.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Diagonal matrix:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(D)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(rect1)
ASSIGN
INT(2)
COMMA
INT(3)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
COMMA
FLOAT(3.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(4.000000)
COMMA
FLOAT(5.000000)
COMMA
FLOAT(6.000000)
RBRACKET
RBRACKET
SEMICOLON
MATRIX_TYPE
IDENT(rect2)
ASSIGN
INT(3)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(3.000000)
COMMA
FLOAT(4.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(5.000000)
COMMA
FLOAT(6.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Rectangular matrix 1:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(rect1)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Rectangular matrix 2:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(rect2)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(rect_mult)
ASSIGN
IDENT(rect1)
MATRIX_MULT
IDENT(rect2)
SEMICOLON
PRINT
LPAREN
STRING(rect1 * rect2 (2x3 * 3x2 = 2x2):)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(rect_mult)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(rect_trans)
ASSIGN
TRANSPOSE
LPAREN
IDENT(rect1)
RPAREN
SEMICOLON
PRINT
LPAREN
STRING(Transpose of rect1:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(rect_trans)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(int_matrix)
ASSIGN
INT(2)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.000000)
RBRACKET
COMMA
LBRACKET
FLOAT(3.000000)
COMMA
FLOAT(4.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Matrix with integer elements:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(int_matrix)
RPAREN
SEMICOLON
MATRIX_TYPE
IDENT(mixed_matrix)
ASSIGN
INT(2)
COMMA
INT(2)
LBRACKET
LBRACKET
FLOAT(1.000000)
COMMA
FLOAT(2.500000)
RBRACKET
COMMA
LBRACKET
FLOAT(3.700000)
COMMA
FLOAT(4.000000)
RBRACKET
RBRACKET
SEMICOLON
PRINT
LPAREN
STRING(Matrix with mixed elements:)
RPAREN
SEMICOLON
PRINT_MATRIX
LPAREN
IDENT(mixed_matrix)
RPAREN
SEMICOLON
EOF
Type checking successful!
Matrix A:
[
  [1., 2.],
  [3., 4.]
]
Matrix B:
[
  [5., 6.],
  [7., 8.]
]
A + B =
[
  [6., 8.],
  [10., 12.]
]
2 * A =
[
  [2., 4.],
  [6., 8.]
]
A * B =
[
  [19., 22.],
  [43., 50.]
]
Transpose of A:
[
  [1., 3.],
  [2., 4.]
]
Dimensions of A:
[2, 2]
A[0][0] =
1.000000
3x3 Matrix M1:
[
  [1., 2., 3.],
  [4., 5., 6.],
  [7., 8., 9.]
]
3x3 Matrix M2:
[
  [9., 8., 7.],
  [6., 5., 4.],
  [3., 2., 1.]
]
M1 + M2 =
[
  [10., 10., 10.],
  [10., 10., 10.],
  [10., 10., 10.]
]
M1 * M2 =
[
  [30., 24., 18.],
  [84., 69., 54.],
  [138., 114., 90.]
]
Matrix for determinant:
[
  [4., -2.],
  [-1., 3.]
]
Determinant =
10.000000
3x3 Matrix for determinant:
[
  [1., 2., 3.],
  [0., 1., 4.],
  [5., 6., 0.]
]
Determinant =
1.000000
Matrix for inverse:
[
  [4., 7.],
  [2., 6.]
]
Inverse =
[
  [0.6, -0.7],
  [-0.2, 0.4]
]
Original * Inverse (should be identity):
[
  [1., 4.4408920985e-16],
  [-2.22044604925e-16, 1.]
]
Matrix M:
[
  [1., 2.],
  [3., 4.]
]
Vector v:
[1., 2.]
3x3 Identity matrix:
[
  [1., 0., 0.],
  [0., 1., 0.],
  [0., 0., 1.]
]
Upper triangular matrix:
[
  [1., 2., 3.],
  [0., 4., 5.],
  [0., 0., 6.]
]
Lower triangular matrix:
[
  [1., 0., 0.],
  [2., 3., 0.],
  [4., 5., 6.]
]
Diagonal matrix:
[
  [2., 0., 0.],
  [0., 3., 0.],
  [0., 0., 4.]
]
Rectangular matrix 1:
[
  [1., 2., 3.],
  [4., 5., 6.]
]
Rectangular matrix 2:
[
  [1., 2.],
  [3., 4.],
  [5., 6.]
]
rect1 * rect2 (2x3 * 3x2 = 2x2):
[
  [22., 28.],
  [49., 64.]
]
Transpose of rect1:
[
  [1., 4.],
  [2., 5.],
  [3., 6.]
]
Matrix with integer elements:
[
  [1., 2.],
  [3., 4.]
]
Matrix with mixed elements:
[
  [1., 2.5],
  [3.7, 4.]
]
Program executed successfully
